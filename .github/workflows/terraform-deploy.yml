name: "Reusable Terraform Workflow"

on:
  workflow_call:
    inputs:
      directories:
        description: "Pares chave:valor representando diretorios e nomes"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "AWS Access Key ID"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key"
        required: true
      AWS_DEFAULT_REGION:
        description: "AWS Default Region"
        required: true

jobs:
  terraform-operations:
    name: "Terraform Operations"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(inputs.directories) }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Validate Directories Input
        run: |
          echo "${{ inputs.directories }}" | jq empty || exit 1

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Generate State Key
        id: state_key
        run: |
          STATE_KEY=$(echo "${{ matrix.directory.value }}" | sed 's/\\//-/g')
          echo "state_key=$STATE_KEY" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init -backend-config="key=terraform-state/${{ env.state_key }}.tfstate" -var-file="dev.tfvars"
        working-directory: ${{ matrix.directory.value }}

      - name: Terraform Plan
        run: terraform plan -input=false -var="state_key=${{ env.state_key }}" -var-file="dev.tfvars"
        working-directory: ${{ matrix.directory.value }}

      - name: Terraform Apply (Optional)
        if: ${{ env.RUN_APPLY == 'true' }}
        run: terr
