name: "Reusable Terraform Workflow"

on:
  workflow_call:
    inputs:
      directory:
        description: "Caminho completo do diret√≥rio Terraform"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "AWS Access Key ID"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key"
        required: true
      AWS_DEFAULT_REGION:
        description: "AWS Default Region"
        required: true

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    outputs:
      state_key: ${{ steps.state_key.outputs.state_key }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate State Key
        id: state_key
        run: |
          STATE_KEY=$(echo "${{ inputs.directory }}" | sed 's/\//-/g')
          echo "::set-output name=state_key::$STATE_KEY"

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init -backend-config="key=terraform-state/${{ steps.state_key.outputs.state_key }}.tfstate" -var-file="dev.tfvars"
        working-directory: ${{ inputs.directory }}

      - name: Terraform Plan
        run: terraform plan -input=false -var="state_key=${{ steps.state_key.outputs.state_key }}" -var-file="dev.tfvars"
        working-directory: ${{ inputs.directory }}

  terraform-apply:
    name: "Terraform Apply"
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: approval-apply
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init -backend-config="key=terraform-state/${{ needs.terraform-plan.outputs.state_key }}.tfstate" -var-file="dev.tfvars"
        working-directory: ${{ inputs.directory }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var="state_key=${{ needs.terraform-plan.outputs.state_key }}" -var-file="dev.tfvars"
        working-directory: ${{ inputs.directory }}

  terraform-destroy:
    name: "Terraform Destroy"
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: approval-destroy
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init -backend-config="key=terraform-state/${{ needs.terraform-plan.outputs.state_key }}.tfstate" -var-file="dev.tfvars"
        working-directory: ${{ inputs.directory }}

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var="state_key=${{ needs.terraform-plan.outputs.state_key }}" -var-file="dev.tfvars"
        working-directory: ${{ inputs.directory }}
